---
import { Image } from 'astro:assets';

interface Props {
  query: string;
  width: number;
  height: number;
}

const { query, width, height } = Astro.props;

const UNSPLASH_ACCESS_KEY = import.meta.env.UNSPLASH_ACCESS_KEY;

if (!UNSPLASH_ACCESS_KEY) {
  throw new Error('UNSPLASH_ACCESS_KEY is not set in the environment variables');
}

const response = await fetch(
  `https://api.unsplash.com/photos/random?query=${encodeURIComponent(query)}&w=${width}&h=${height}`,
  {
    headers: {
      Authorization: `Client-ID ${UNSPLASH_ACCESS_KEY}`,
    },
  }
);

if (!response.ok) {
  throw new Error('Failed to fetch image from Unsplash');
}

const data = await response.json();
const imageUrl = data.urls.raw + `&w=${width}&h=${height}&fit=crop&crop=faces,center`;
const photographerName = data.user.name;
const photographerUrl = data.user.links.html;
const downloadUrl = data.links.download_location;

// Trigger download event
fetch(downloadUrl, {
  headers: {
    Authorization: `Client-ID ${UNSPLASH_ACCESS_KEY}`,
  },
});
---

<div class="unsplash-image-container">
  <img src={imageUrl} width={width} height={height} alt={data.alt_description || 'Unsplash Image'} />
  <div class="attribution">
    Photo by <a href={`${photographerUrl}?utm_source=yourdomain&utm_medium=referral`} target="_blank" rel="noopener noreferrer">{photographerName}</a> on <a href="https://unsplash.com/?utm_source=yourdomain&utm_medium=referral" target="_blank" rel="noopener noreferrer">Unsplash</a>
  </div>
</div>
<!-- 
<style>
  .unsplash-image-container {
    position: relative;
    width: 100%;
    max-width: {width}px;
  }
  .attribution {
    position: absolute;
    bottom: 10px;
    right: 10px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 5px 10px;
    font-size: 12px;
    border-radius: 3px;
  }
  .attribution a {
    color: white;
    text-decoration: none;
  }
  .attribution a:hover {
    text-decoration: underline;
  }
</style> -->
