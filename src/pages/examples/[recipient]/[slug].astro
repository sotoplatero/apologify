---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { recipients } from '../../../lib/apologyData';
import Letter from '@/components/Letter.svelte';
import CallToAction from '@/components/CallToAction.astro';

export async function getStaticPaths() {
  const allLetters = await getCollection('letters');
  return allLetters.map((letter: CollectionEntry<'letters'>) => {
    const slug = letter.id.split('/')[1].replace('.json', '');
    return {
      params: { recipient: letter.data.recipient, slug },
      props: { letter },
    };
  });
}

interface Props {
  letter: CollectionEntry<'letters'>;
}

const { letter } = Astro.props;
const { recipient, slug } = Astro.params;

const recipientLabel = recipients.find(r => r.value === recipient)?.label || recipient;
---

<Layout title={`Apology Letters to ${recipientLabel}`} description={`Example apology letters to ${recipientLabel}. ${letter.data.context}`}>
  <main class="max-w-screen-md mx-auto px-4  py-8">
    <h1 class="text-4xl font-bold mb-4 text-center">Apology Letters to {recipientLabel}. <br /> {letter.data.context}</h1>
    <!-- <p class="text-center text-gray-600 mb-8">Context: {letter.data.context}</p> -->

    <div class="flex flex-col gap-8">
      {letter.data.letters.map((letterText: string, index: number) => (
        <Letter letter={letterText} client:load />
      ))}
    </div>

    <div class="my-16 flex justify-center">
      <a href={`/examples/${recipient}`} class="btn btn-outline capitalize">
        {recipientLabel} Letters
      </a>
    </div>

    <CallToAction />

  </main>
</Layout>
