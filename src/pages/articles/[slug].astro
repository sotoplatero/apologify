---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import UnsplashImage from '../../components/UnsplashImage.astro';

export async function getStaticPaths() {
  const articleEntries = await getCollection('articles');
  return articleEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface ArticleEntry {
  data: {
    title: string;
    date?: string | Date;
    // Add other properties as needed
  };
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const articles = await getCollection('articles');
const sortedArticles = articles.sort((a: ArticleEntry, b: ArticleEntry) => {
  return new Date(b.data.date || 0).getTime() - new Date(a.data.date || 0).getTime();
});

const currentIndex = sortedArticles.findIndex(article => article.slug === entry.slug);
const prevArticle = sortedArticles[currentIndex + 1];
const nextArticle = sortedArticles[currentIndex - 1];
---

<Layout title={entry.data.title}>
  <article class="mx-auto max-w-3xl mt-14">
    <h1 class="text-4xl font-bold mb-6">{entry.data.title}</h1>
    {entry.data.date && (
      <p class="text-gray-500 mb-2">
        {new Date(entry.data.date).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        })}
      </p>
    )}
    <UnsplashImage article={entry} />
    <div class="prose prose-lg mt-6">
      <Content />
    </div>
  </article>
  
  <!-- Navigation links -->
  <div class="flex justify-between mt-8">
    {prevArticle && (
      <a href={`/articles/${prevArticle.slug}`} class="text-blue-500 hover:underline">
        ← {prevArticle.data.title}
      </a>
    )}
    {nextArticle && (
      <a href={`/articles/${nextArticle.slug}`} class="text-blue-500 hover:underline ml-auto">
        {nextArticle.data.title} →
      </a>
    )}
  </div>
</Layout>

<style>
  .prose img {
    @apply mx-auto;
  }
  .full-bleed {
    width: 100vw;
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
    display: flex;
    justify-content: center;
    align-items: center;
  }
</style>
