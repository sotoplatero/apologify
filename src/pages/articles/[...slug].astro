---
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import UnsplashImage from '@/components/UnsplashImage.astro';
import CallToAction from '@/components/CallToAction.astro';

export async function getStaticPaths() {
  const articleEntries = await getCollection('articles');
  return articleEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const articles = await getCollection('articles');
const sortedArticles = articles.sort((a, b) => 
  new Date(b.data.date || 0).getTime() - new Date(a.data.date || 0).getTime()
);

const currentIndex = sortedArticles.findIndex(article => article.slug === entry.slug);
const prevArticle = sortedArticles[currentIndex + 1];
const nextArticle = sortedArticles[currentIndex - 1];
---

<Layout title={entry.data.title} description={entry.data.description}>
  <article class="prose prose-lg mx-auto">
    {entry.data.date && (
      <time datetime={entry.data?.date.toISOString()} class="text-gray-500">
        {entry.data.date.toLocaleDateString()}
      </time>
    )}

    <h1>{entry.data.title}</h1>

    <UnsplashImage article={entry} />

    <Content />

  </article>
  
  <!-- Navigation links -->
  <div class="flex justify-between my-8">
    {prevArticle && (
      <a href={`/articles/${prevArticle.slug}`} class="text-blue-500 hover:underline">
        ← {prevArticle.data.title}
      </a>
    )}
    {nextArticle && (
      <a href={`/articles/${nextArticle.slug}`} class="text-blue-500 hover:underline ml-auto">
        {nextArticle.data.title} →
      </a>
    )}
  </div>

  <CallToAction />
</Layout>

<style is:global>
  pre {
    @apply !bg-gray-100 !text-black !p-8 !rounded-md !border border-gray-200 !text-wrap;
  } 
</style>
