---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import HowItWorks from '../components/HowItWorks.astro';
import CallToAction from '../components/CallToAction.astro';
import { getCollection } from 'astro:content';

const recentArticles = (await getCollection('articles'))
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
  .slice(0, 3);

// Obtener dos cartas de ejemplo aleatorias
const allLetters = await getCollection('letters');
const sampleLetters = allLetters.sort(() => 0.5 - Math.random()).slice(0, 4);

function truncateText(text: string, maxLength: number = 280): string {
  if (text.length <= maxLength) return text;
  
  // Cortar en el último espacio antes del límite para no cortar palabras
  const truncated = text.slice(0, maxLength);
  const lastSpace = truncated.lastIndexOf(' ');
  
  return truncated.slice(0, lastSpace) + '...';
}
---

<Layout title="Apology Letter Generator" description="Create personalized apology letters and explore our collection of apology articles">
  <Hero />
  
  <main class="container mx-auto py-24 px-6">
      <HowItWorks />
      
      <!-- Nueva sección de cartas de ejemplo -->
      <section class="my-32">
        <div class="text-center space-y-4 mb-16">
          <h2 class="text-4xl md:text-5xl font-bold text-gray-800 leading-tight tracking-tight">Sample Apology Letters</h2>
          <p class="text-xl text-gray-600">Explore real examples to inspire your own apology</p>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {sampleLetters.map((letter) => (
            <div class="group bg-white/80 backdrop-blur-sm shadow-lg rounded-2xl overflow-hidden border-2 border-gray-200 hover:border-purple-300 transition-all duration-300 hover:scale-105 hover:shadow-xl">
              <div class="p-6 md:p-8">
                <h3 class="text-2xl font-semibold mb-4 text-gray-800 group-hover:text-purple-700 transition-colors duration-300">
                  Apology to {letter.data.recipient.charAt(0).toUpperCase() + letter.data.recipient.slice(1)}: {letter.data.context}
                </h3>
                <div class="prose prose-lg max-w-none mb-6">
                  <p class="italic text-gray-700 whitespace-pre-line leading-relaxed">
                    {truncateText(letter.data.letters[0])}
                  </p>
                </div>
                <a 
                  href={`/examples/${letter.data.recipient}/${letter.id.split('/')[1].replace('.json', '')}`} 
                  class="inline-flex items-center space-x-2 text-purple-600 hover:text-purple-700 font-medium transition-colors duration-200 group-hover:translate-x-1"
                >
                  <span>Read more</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-200" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </a>
              </div>
            </div>
          ))}
        </div>
        <div class="text-center mt-12">
          <a href="/examples" class="inline-flex items-center space-x-2 px-8 py-4 bg-purple-600 text-white rounded-xl hover:bg-purple-700 transition-all duration-300 font-medium shadow-lg hover:shadow-xl hover:scale-105">
            <span>View More Examples</span>
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </div>
      </section>

      <section class="my-32">
        <div class="text-center space-y-4 mb-16">
          <h2 class="text-4xl md:text-5xl font-bold text-gray-800 leading-tight tracking-tight">Recent Articles</h2>
          <p class="text-xl text-gray-600">Learn from our expert guides and tips</p>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {recentArticles.map((article) => (
            <article class="group bg-white/80 backdrop-blur-sm shadow-lg rounded-2xl overflow-hidden border-2 border-gray-200 hover:border-purple-300 transition-all duration-300 hover:scale-105 hover:shadow-xl">
              {article.data.image && (
                <div class="overflow-hidden">
                  <img src={article.data.image} alt={article.data.title} class="w-full aspect-video object-cover group-hover:scale-110 transition-transform duration-300" />
                </div>
              )}
              <div class="p-6 md:p-8">
                <h3 class="text-xl font-semibold mb-4 text-gray-800 group-hover:text-purple-700 transition-colors duration-300 leading-tight">
                  <a href={`/articles/${article.slug}`} class="hover:text-purple-600 transition-colors duration-300">
                    {article.data.title}
                  </a>
                </h3>
                <a href={`/articles/${article.slug}`} class="inline-flex items-center space-x-2 text-purple-600 hover:text-purple-700 font-medium transition-colors duration-200 group-hover:translate-x-1">
                  <span>Read more</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-200" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </a>
              </div>
            </article>
          ))}
        </div>
        <div class="text-center mt-12">
          <a href="/articles" class="inline-flex items-center space-x-2 px-8 py-4 bg-purple-600 text-white rounded-xl hover:bg-purple-700 transition-all duration-300 font-medium shadow-lg hover:shadow-xl hover:scale-105">
            <span>View All Articles</span>
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </div>
      </section>

      <CallToAction />
    </main>
</Layout>
