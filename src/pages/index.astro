---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import CallToAction from '../components/CallToAction.astro';
import { getCollection } from 'astro:content';

const recentArticles = await getCollection('articles').then((articles) => articles.slice(0, 4));

const steps = [
  {
    title: "Recipient",
    description: "Select who you're apologizing to from our list of common relationships.",
    icon: "üë•"
  },
  {
    title: "Situation",
    description: "Briefly explain the context and reason for your apology.",
    icon: "‚úçÔ∏è"
  },
  {
    title: "Tone",
    description: "Pick the appropriate tone for your apology letter.",
    icon: "üé≠"
  },
  {
    title: "Generate",
    description: "Our AI creates a personalized apology letter based on your inputs.",
    icon: "üìù"
  }
];
---

<Layout title="Apology Letter Generator" description="Create personalized apology letters and explore our collection of apology articles">
  <Hero />
  
  <main class="container mx-auto py-24">
    <section class="mb-32">
      <h2 class="text-4xl font-bold mb-16 text-center text-gray-800">How It Works</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        {steps.map((step, index) => (
          <div class="flex flex-col items-center text-center bg-white rounded-lg transition-transform duration-300 hover:scale-105">
            <div class="text-6xl mb-6 bg-base-200 text-white rounded-full p-4 w-24 h-24 flex items-center justify-center">{step.icon}</div>
            <h3 class="text-2xl font-semibold mb-4 text-gray-800">{index + 1}. {step.title}</h3>
            <p class="text-gray-600 text-lg">{step.description}</p>
          </div>
        ))}
      </div>
    </section>
    
    <section class="my-32">
      <h2 class="text-4xl font-bold mb-16 text-center text-gray-800">Recent Articles</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
        {recentArticles.map((article) => (
          <article class="bg-white shadow-xl rounded-lg overflow-hidden transition-transform duration-300 hover:scale-105">
            {article.data.image && (
              <img src={article.data.image} alt={article.data.title} class="w-full aspect-video object-cover" />
            )}
            <div class="p-8">
              <h3 class="text-2xl font-semibold mb-4 text-gray-800">
                <a href={`/articles/${article.slug}`} class="hover:text-primary transition-colors duration-300">
                  {article.data.title}
                </a>
              </h3>
              <p class="text-gray-600 text-lg mb-4">{article.data.description}</p>
              <a href={`/articles/${article.slug}`} class="text-primary hover:underline inline-flex items-center">
                Read more 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </a>
            </div>
          </article>
        ))}
      </div>
      <div class="text-center mt-16">
        <a href="/articles" class="btn btn-primary btn-lg">View All Articles</a>
      </div>
    </section>

	<CallToAction />
  </main>
</Layout>
